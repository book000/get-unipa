name: Release

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - master
      - develop
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged

    outputs:
      version: ${{ steps.tag_version.outputs.new_version }}
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
      release-html-url: ${{ steps.create_release.outputs.html_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: "minor"
          custom_release_rules: ${{ (github.ref != 'refs/heads/master' && 'feat:minor:✨ Features,fix:patch:🐛 Bug Fixes,docs:patch:📰 Docs,chore:patch:🎨 Chore,pref:patch:🎈 Performance improvements,refactor:patch:🧹 Refactoring,build:patch:🔍 Build,ci:patch:🔍 CI,revert:patch:⏪ Revert,style:patch:🧹 Style,test:patch:👀 Test') || '' }}
          release_branches: "master"
          pre_release_branches: "develop"

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: '3.10'

      - name: Get pip cache
        id: pip-cache
        run: |
          python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      - uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Sed Version
        id: sed_version
        run: |
          echo ${{ steps.tag_version.outputs.new_version }}> get-unipa.version
          sed -i 's/-develop./.dev/g' get-unipa.version
          echo "name=new_version::$(cat get-unipa.version)"
          echo "::set-output name=new_version::$(cat get-unipa.version)"
          echo "::set-output name=new_tag::v$(cat get-unipa.version)"

      - name: Publish release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.sed_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}https://${{ (github.ref != 'refs/heads/master' && 'test.') || '' }}pypi.org/project/get-unipa/${{ steps.sed_version.outputs.new_version }}/
          prerelease: ${{ (github.ref != 'refs/heads/master' && 'true') || 'false' }}

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1.6.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.gz

      - name: Released comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request_target'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `# リリースが完了しました\n\n${{ steps.create_release.outputs.html_url }}`
            })

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish
        run: |
          python setup.py sdist sdist
          python setup.py sdist bdist_wheel
          twine upload ${{ (github.ref != 'refs/heads/master' && '--repository-url https://test.pypi.org/legacy/') || '' }} dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
