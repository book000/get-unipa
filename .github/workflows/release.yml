name: Pre Release

on:
  workflow_dispatch:
  pull_request_target:
    branches:
      - master
    types:
      - closed

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || github.event.pull_request.merged

    outputs:
      version: ${{ steps.tag_version.outputs.new_version }}
      release-upload-url: ${{ steps.create_release.outputs.upload_url }}
      release-html-url: ${{ steps.create_release.outputs.html_url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: "minor"
          custom_release_rules: "feat:minor:✨ Features,fix:patch:🐛 Bug Fixes,docs:patch:📰 Docs,chore:patch:🎨 Chore,pref:patch:🎈 Performance improvements,refactor:patch:🧹 Refactoring,build:patch:🔍 Build,ci:patch:🔍 CI,revert:patch:⏪ Revert,style:patch:🧹 Style,test:patch:👀 Test"
          release_branches: "master"
          pre_release_branches: "develop"

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: adopt

      - name: Create venv
        run: python -mvenv venv

      - uses: actions/cache@v2
        id: cache-venv
        with:
          path: ./.venv/
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: python -m venv ./.venv && . ./.venv/bin/activate && pip install -r requirements.txt

      - name: Sed Version
        run: |
          echo ${{ steps.tag_version.outputs.new_version }}> get-unipa.version

      - name: Set PROJECT_NAME
        id: vars
        run: |
          echo "::set-output name=PROJECT_NAME::`TOP=$(git rev-parse --show-toplevel); echo ${TOP##*/}`"

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Publish release
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}
          prerelease: ${{ (github.ref == 'refs/heads/master' && "true") || "false" }}

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1.6.1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/*.gz

      - name: Released comment
        uses: actions/github-script@v6
        if: github.event_name == 'pull_request_target'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `# リリースが完了しました\n\n${{ steps.create_release.outputs.html_url }}`
            })
